function res = ReadMicroscopyData(fileid, Series)

if nargin ==1 
    Series = 1;
end

% reader = bfGetReader(fileid);
% omeMeta = reader.getMetadataStore();

data = bfopen(fileid);
seriesCount = size(data, 1);
fprintf('Number of datasets present in file = %i\n',seriesCount);
metadata = data{1, 4};

for s = 1:seriesCount
    seriesData = data{s, 1};
    SeriesMeta = seriesData{1,2};
    
    pt = strfind(SeriesMeta,'Z?');
    maxi = min(pt+7,length(SeriesMeta));
    if ~isempty(pt) 
        N = SeriesMeta(pt+5:maxi);
        pt2 = strfind(N,';');
        if ~isempty(pt2) 
            NZ = eval(N(1:pt2-1));
        else
            NZ = eval(N);
        end
    else
        NZ = 1;
    end  
    
    pt = strfind(SeriesMeta,'C?');
    maxi = min(pt+7,length(SeriesMeta));
    if ~isempty(pt) 
        N = SeriesMeta(pt+5:maxi);
        pt2 = strfind(N,';');
        if ~isempty(pt2) 
            NC = eval(N(1:pt2-1));
        else
            NC = eval(N);
        end
    else
        NC = 1;
    end     
    
    
    pt = strfind(SeriesMeta,'T?');
    maxi = min(pt+7,length(SeriesMeta));
    if ~isempty(pt) 
        N = SeriesMeta(pt+5:maxi);
        pt2 = strfind(N,';');
        if ~isempty(pt2) 
            NT = eval(N(1:pt2-1));
        else
            NT = eval(N);
        end
    else
        NT = 1;
    end   
    
    
    fprintf('Series #%i: NZ = %i  NC = %i  NT = %i\n', s,NZ,NC,NT);
    
    if s == Series
        stackSizeZ = NZ;
        stackSizeC = NC;
        stackSizeT = NT;
    end
end


seriesData = data{Series, 1};
omeMeta = data{1, 4};


stackSizeX = omeMeta.getPixelsSizeX(0).getValue(); % image width, pixels
stackSizeY = omeMeta.getPixelsSizeY(0).getValue(); % image height, pixels
% stackSizeZ = omeMeta.getPixelsSizeZ(0).getValue(); % number of Z slices
% stackSizeC = omeMeta.getPixelsSizeC(0).getValue(); % number of C slices
% stackSizeT = omeMeta.getPixelsSizeT(0).getValue(); % number of T slices


PixelType = omeMeta.getPixelsType(0).getValue().toCharArray()';

fprintf('\nReading Series #%i\n',Series);
fprintf('Data format (%i x %i)\n NZ = %i\n NChannels = %i\n NFrames = %i\n Encoding = %s\n', stackSizeX,stackSizeY,stackSizeZ, stackSizeC,stackSizeT,PixelType);

image = zeros([stackSizeY,stackSizeX,stackSizeZ,stackSizeC,stackSizeT],PixelType);

for z = 1:stackSizeZ
    for c = 1:stackSizeC
        for t = 1:stackSizeT
%             image(:,:,z,c,t) = bfGetPlane(reader, z + (c-1)*stackSizeZ + (t-1)*stackSizeC*stackSizeZ );
            n = z + (c-1)*stackSizeZ + (t-1)*stackSizeC*stackSizeZ;
            image(:,:,z,c,t) = seriesData{n,1};
        end
    end
end

image = squeeze(image);

res.images = image;
res.NX = stackSizeX;
res.NY = stackSizeY;
res.NZ = stackSizeZ;
res.NC = stackSizeC;
res.NT = stackSizeT;
res.PixelType = PixelType;
